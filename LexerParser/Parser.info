-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------

state 57 contains 15 reduce/reduce conflicts.
state 138 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Program                            (0)
	Program -> program id ';' Body '.'                 (1)
	Body -> Locals Block                               (2)
	Locals -> Locals Local                             (3)
	Locals ->                                          (4)
	Local -> var Variables                             (5)
	Local -> label id Ids ';'                          (6)
	Local -> Header ';' Body ';'                       (7)
	Local -> forward Header ';'                        (8)
	Variables -> Variables IdsAndType                  (9)
	Variables -> IdsAndType                            (10)
	IdsAndType -> id Ids ':' Type ';'                  (11)
	Ids -> Ids ',' id                                  (12)
	Ids ->                                             (13)
	Header -> procedure id '(' Args ')'                (14)
	Header -> function id '(' Args ')' ':' Type        (15)
	Args ->                                            (16)
	Args -> Formals                                    (17)
	Formals -> Formals ';' Formal                      (18)
	Formals -> Formal                                  (19)
	Formal -> Vars id Ids ':' Type                     (20)
	Vars ->                                            (21)
	Vars -> var                                        (22)
	Type -> integer                                    (23)
	Type -> real                                       (24)
	Type -> boolean                                    (25)
	Type -> char                                       (26)
	Type -> array ArrSize of Type                      (27)
	Type -> '^' Type                                   (28)
	ArrSize -> '[' intconst ']'                        (29)
	ArrSize ->                                         (30)
	Block -> begin Stmt Stmts end                      (31)
	Stmts -> Stmts ';' Stmt                            (32)
	Stmts ->                                           (33)
	Stmt ->                                            (34)
	Stmt -> LValue equal Expr                          (35)
	Stmt -> Block                                      (36)
	Stmt -> Call                                       (37)
	Stmt -> if Expr then Stmt Else                     (38)
	Stmt -> while Expr do Stmt                         (39)
	Stmt -> id ':' Stmt                                (40)
	Stmt -> goto id                                    (41)
	Stmt -> return                                     (42)
	Stmt -> new New LValue                             (43)
	Stmt -> dispose Dispose LValue                     (44)
	Else -> else Stmt                                  (45)
	Else ->                                            (46)
	New -> '[' Expr ']'                                (47)
	New ->                                             (48)
	Dispose -> '[' ']'                                 (49)
	Dispose ->                                         (50)
	Expr -> LValue                                     (51)
	Expr -> RValue                                     (52)
	LValue -> id                                       (53)
	LValue -> result                                   (54)
	LValue -> stringconst                              (55)
	LValue -> LValue '[' Expr ']'                      (56)
	LValue -> Expr '^'                                 (57)
	LValue -> '(' LValue ')'                           (58)
	RValue -> intconst                                 (59)
	RValue -> true                                     (60)
	RValue -> false                                    (61)
	RValue -> realconst                                (62)
	RValue -> charconst                                (63)
	RValue -> '(' RValue ')'                           (64)
	RValue -> nil                                      (65)
	RValue -> Call                                     (66)
	RValue -> '@' LValue                               (67)
	RValue -> not Expr                                 (68)
	RValue -> '+' Expr                                 (69)
	RValue -> '-' Expr                                 (70)
	RValue -> Expr '+' Expr                            (71)
	RValue -> Expr '*' Expr                            (72)
	RValue -> Expr '-' Expr                            (73)
	RValue -> Expr '/' Expr                            (74)
	RValue -> Expr div Expr                            (75)
	RValue -> Expr mod Expr                            (76)
	RValue -> Expr or Expr                             (77)
	RValue -> Expr and Expr                            (78)
	RValue -> Expr '=' Expr                            (79)
	RValue -> Expr diff Expr                           (80)
	RValue -> Expr '<' Expr                            (81)
	RValue -> Expr '>' Expr                            (82)
	RValue -> Expr greq Expr                           (83)
	RValue -> Expr smeq Expr                           (84)
	Call -> id '(' ArgExprs ')'                        (85)
	ArgExprs -> Expr Exprs                             (86)
	ArgExprs ->                                        (87)
	Exprs -> Exprs ',' Expr                            (88)
	Exprs ->                                           (89)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	and            { TAnd }
	array          { TArray }
	begin          { TBegin }
	boolean        { TBoolean }
	char           { TChar }
	dispose        { TDispose }
	div            { TDivInt }
	do             { TDo }
	else           { TElse }
	end            { TEnd }
	false          { TFalse }
	forward        { TForward }
	function       { TFunction }
	goto           { TGoto }
	if             { TIf }
	integer        { TInteger }
	label          { TLabel }
	mod            { TMod }
	new            { TNew }
	nil            { TNil }
	not            { TNot }
	of             { TOf }
	or             { TOr }
	procedure      { TProcedure }
	program        { TProgram }
	real           { TReal }
	result         { TResult }
	return         { TReturn }
	then           { TThen }
	true           { TTrue }
	var            { TVar }
	while          { TWhile }
	id             { TId          $$ }
	intconst       { TIntconst    $$ }
	realconst      { TRealconst   $$ }
	charconst      { TCharconst   $$ }
	stringconst    { TStringconst $$ }
	'='            { TLogiceq }
	'>'            { TGreater }
	'<'            { TSmaller }
	diff           { TDifferent }
	greq           { TGreaterequal }
	smeq           { TSmallerequal }
	'+'            { TAdd }
	'-'            { TMinus }
	'*'            { TMul }
	'/'            { TDivReal }
	'^'            { TPointer }
	'@'            { TAdress }
	equal          { TEq }
	';'            { TSeperator }
	'.'            { TDot }
	'('            { TLeftparen }
	')'            { TRightparen }
	':'            { TUpdown }
	','            { TComma }
	'['            { TLeftbracket }
	']'            { TRightbracket }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Program         rule  1
	Body            rule  2
	Locals          rules 3, 4
	Local           rules 5, 6, 7, 8
	Variables       rules 9, 10
	IdsAndType      rule  11
	Ids             rules 12, 13
	Header          rules 14, 15
	Args            rules 16, 17
	Formals         rules 18, 19
	Formal          rule  20
	Vars            rules 21, 22
	Type            rules 23, 24, 25, 26, 27, 28
	ArrSize         rules 29, 30
	Block           rule  31
	Stmts           rules 32, 33
	Stmt            rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
	Else            rules 45, 46
	New             rules 47, 48
	Dispose         rules 49, 50
	Expr            rules 51, 52
	LValue          rules 53, 54, 55, 56, 57, 58
	RValue          rules 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
	Call            rule  85
	ArgExprs        rules 86, 87
	Exprs           rules 88, 89

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	program        shift, and enter state 2

	Program        goto state 3

State 1


	program        shift, and enter state 2


State 2

	Program -> program . id ';' Body '.'                (rule 1)

	id             shift, and enter state 4


State 3

	%start_parse -> Program .                           (rule 0)

	%eof           accept


State 4

	Program -> program id . ';' Body '.'                (rule 1)

	';'            shift, and enter state 5


State 5

	Program -> program id ';' . Body '.'                (rule 1)

	begin          reduce using rule 4
	forward        reduce using rule 4
	function       reduce using rule 4
	label          reduce using rule 4
	procedure      reduce using rule 4
	var            reduce using rule 4

	Body           goto state 6
	Locals         goto state 7

State 6

	Program -> program id ';' Body . '.'                (rule 1)

	'.'            shift, and enter state 17


State 7

	Body -> Locals . Block                              (rule 2)
	Locals -> Locals . Local                            (rule 3)

	begin          shift, and enter state 11
	forward        shift, and enter state 12
	function       shift, and enter state 13
	label          shift, and enter state 14
	procedure      shift, and enter state 15
	var            shift, and enter state 16

	Local          goto state 8
	Header         goto state 9
	Block          goto state 10

State 8

	Locals -> Locals Local .                            (rule 3)

	begin          reduce using rule 3
	forward        reduce using rule 3
	function       reduce using rule 3
	label          reduce using rule 3
	procedure      reduce using rule 3
	var            reduce using rule 3


State 9

	Local -> Header . ';' Body ';'                      (rule 7)

	';'            shift, and enter state 51


State 10

	Body -> Locals Block .                              (rule 2)

	';'            reduce using rule 2
	'.'            reduce using rule 2


State 11

	Block -> begin . Stmt Stmts end                     (rule 31)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 26
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 12

	Local -> forward . Header ';'                       (rule 8)

	function       shift, and enter state 13
	procedure      shift, and enter state 15

	Header         goto state 24

State 13

	Header -> function . id '(' Args ')' ':' Type       (rule 15)

	id             shift, and enter state 23


State 14

	Local -> label . id Ids ';'                         (rule 6)

	id             shift, and enter state 22


State 15

	Header -> procedure . id '(' Args ')'               (rule 14)

	id             shift, and enter state 21


State 16

	Local -> var . Variables                            (rule 5)

	id             shift, and enter state 20

	Variables      goto state 18
	IdsAndType     goto state 19

State 17

	Program -> program id ';' Body '.' .                (rule 1)

	%eof           reduce using rule 1


State 18

	Local -> var Variables .                            (rule 5)
	Variables -> Variables . IdsAndType                 (rule 9)

	begin          reduce using rule 5
	forward        reduce using rule 5
	function       reduce using rule 5
	label          reduce using rule 5
	procedure      reduce using rule 5
	var            reduce using rule 5
	id             shift, and enter state 20

	IdsAndType     goto state 94

State 19

	Variables -> IdsAndType .                           (rule 10)

	begin          reduce using rule 10
	forward        reduce using rule 10
	function       reduce using rule 10
	label          reduce using rule 10
	procedure      reduce using rule 10
	var            reduce using rule 10
	id             reduce using rule 10


State 20

	IdsAndType -> id . Ids ':' Type ';'                 (rule 11)

	':'            reduce using rule 13
	','            reduce using rule 13

	Ids            goto state 93

State 21

	Header -> procedure id . '(' Args ')'               (rule 14)

	'('            shift, and enter state 92


State 22

	Local -> label id . Ids ';'                         (rule 6)

	';'            reduce using rule 13
	','            reduce using rule 13

	Ids            goto state 91

State 23

	Header -> function id . '(' Args ')' ':' Type       (rule 15)

	'('            shift, and enter state 90


State 24

	Local -> forward Header . ';'                       (rule 8)

	';'            shift, and enter state 89


State 25

	Stmt -> Block .                                     (rule 36)

	else           reduce using rule 36
	end            reduce using rule 36
	';'            reduce using rule 36


State 26

	Block -> begin Stmt . Stmts end                     (rule 31)

	end            reduce using rule 33
	';'            reduce using rule 33

	Stmts          goto state 88

State 27

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87


State 28

	Stmt -> LValue . equal Expr                         (rule 35)
	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)

	and            reduce using rule 51
	div            reduce using rule 51
	mod            reduce using rule 51
	or             reduce using rule 51
	'='            reduce using rule 51
	'>'            reduce using rule 51
	'<'            reduce using rule 51
	diff           reduce using rule 51
	greq           reduce using rule 51
	smeq           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	equal          shift, and enter state 71
	'['            shift, and enter state 72


State 29

	Expr -> RValue .                                    (rule 52)

	and            reduce using rule 52
	div            reduce using rule 52
	do             reduce using rule 52
	else           reduce using rule 52
	end            reduce using rule 52
	mod            reduce using rule 52
	or             reduce using rule 52
	then           reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	';'            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	']'            reduce using rule 52


State 30

	Stmt -> Call .                                      (rule 37)
	RValue -> Call .                                    (rule 66)

	and            reduce using rule 66
	div            reduce using rule 66
	else           reduce using rule 37
	end            reduce using rule 37
	mod            reduce using rule 66
	or             reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'<'            reduce using rule 66
	diff           reduce using rule 66
	greq           reduce using rule 66
	smeq           reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	';'            reduce using rule 37


State 31

	Stmt -> dispose . Dispose LValue                    (rule 44)

	false          reduce using rule 50
	nil            reduce using rule 50
	not            reduce using rule 50
	result         reduce using rule 50
	true           reduce using rule 50
	id             reduce using rule 50
	intconst       reduce using rule 50
	realconst      reduce using rule 50
	charconst      reduce using rule 50
	stringconst    reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'@'            reduce using rule 50
	'('            reduce using rule 50
	'['            shift, and enter state 70

	Dispose        goto state 69

State 32

	RValue -> false .                                   (rule 61)

	and            reduce using rule 61
	div            reduce using rule 61
	do             reduce using rule 61
	else           reduce using rule 61
	end            reduce using rule 61
	mod            reduce using rule 61
	or             reduce using rule 61
	then           reduce using rule 61
	'='            reduce using rule 61
	'>'            reduce using rule 61
	'<'            reduce using rule 61
	diff           reduce using rule 61
	greq           reduce using rule 61
	smeq           reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'^'            reduce using rule 61
	';'            reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	']'            reduce using rule 61


State 33

	Stmt -> goto . id                                   (rule 41)

	id             shift, and enter state 68


State 34

	Stmt -> if . Expr then Stmt Else                    (rule 38)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 67
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 35

	Stmt -> new . New LValue                            (rule 43)

	false          reduce using rule 48
	nil            reduce using rule 48
	not            reduce using rule 48
	result         reduce using rule 48
	true           reduce using rule 48
	id             reduce using rule 48
	intconst       reduce using rule 48
	realconst      reduce using rule 48
	charconst      reduce using rule 48
	stringconst    reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'@'            reduce using rule 48
	'('            reduce using rule 48
	'['            shift, and enter state 66

	New            goto state 65

State 36

	RValue -> nil .                                     (rule 65)

	and            reduce using rule 65
	div            reduce using rule 65
	do             reduce using rule 65
	else           reduce using rule 65
	end            reduce using rule 65
	mod            reduce using rule 65
	or             reduce using rule 65
	then           reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'<'            reduce using rule 65
	diff           reduce using rule 65
	greq           reduce using rule 65
	smeq           reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	'^'            reduce using rule 65
	';'            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	']'            reduce using rule 65


State 37

	RValue -> not . Expr                                (rule 68)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 64
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 38

	LValue -> result .                                  (rule 54)

	and            reduce using rule 54
	div            reduce using rule 54
	do             reduce using rule 54
	else           reduce using rule 54
	end            reduce using rule 54
	mod            reduce using rule 54
	or             reduce using rule 54
	then           reduce using rule 54
	'='            reduce using rule 54
	'>'            reduce using rule 54
	'<'            reduce using rule 54
	diff           reduce using rule 54
	greq           reduce using rule 54
	smeq           reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	equal          reduce using rule 54
	';'            reduce using rule 54
	')'            reduce using rule 54
	','            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54


State 39

	Stmt -> return .                                    (rule 42)

	else           reduce using rule 42
	end            reduce using rule 42
	';'            reduce using rule 42


State 40

	RValue -> true .                                    (rule 60)

	and            reduce using rule 60
	div            reduce using rule 60
	do             reduce using rule 60
	else           reduce using rule 60
	end            reduce using rule 60
	mod            reduce using rule 60
	or             reduce using rule 60
	then           reduce using rule 60
	'='            reduce using rule 60
	'>'            reduce using rule 60
	'<'            reduce using rule 60
	diff           reduce using rule 60
	greq           reduce using rule 60
	smeq           reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	';'            reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	']'            reduce using rule 60


State 41

	Stmt -> while . Expr do Stmt                        (rule 39)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 63
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 42

	Stmt -> id . ':' Stmt                               (rule 40)
	LValue -> id .                                      (rule 53)
	Call -> id . '(' ArgExprs ')'                       (rule 85)

	and            reduce using rule 53
	div            reduce using rule 53
	mod            reduce using rule 53
	or             reduce using rule 53
	'='            reduce using rule 53
	'>'            reduce using rule 53
	'<'            reduce using rule 53
	diff           reduce using rule 53
	greq           reduce using rule 53
	smeq           reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'^'            reduce using rule 53
	equal          reduce using rule 53
	'('            shift, and enter state 61
	':'            shift, and enter state 62
	'['            reduce using rule 53


State 43

	RValue -> intconst .                                (rule 59)

	and            reduce using rule 59
	div            reduce using rule 59
	do             reduce using rule 59
	else           reduce using rule 59
	end            reduce using rule 59
	mod            reduce using rule 59
	or             reduce using rule 59
	then           reduce using rule 59
	'='            reduce using rule 59
	'>'            reduce using rule 59
	'<'            reduce using rule 59
	diff           reduce using rule 59
	greq           reduce using rule 59
	smeq           reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'^'            reduce using rule 59
	';'            reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	']'            reduce using rule 59


State 44

	RValue -> realconst .                               (rule 62)

	and            reduce using rule 62
	div            reduce using rule 62
	do             reduce using rule 62
	else           reduce using rule 62
	end            reduce using rule 62
	mod            reduce using rule 62
	or             reduce using rule 62
	then           reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'<'            reduce using rule 62
	diff           reduce using rule 62
	greq           reduce using rule 62
	smeq           reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	';'            reduce using rule 62
	')'            reduce using rule 62
	','            reduce using rule 62
	']'            reduce using rule 62


State 45

	RValue -> charconst .                               (rule 63)

	and            reduce using rule 63
	div            reduce using rule 63
	do             reduce using rule 63
	else           reduce using rule 63
	end            reduce using rule 63
	mod            reduce using rule 63
	or             reduce using rule 63
	then           reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'<'            reduce using rule 63
	diff           reduce using rule 63
	greq           reduce using rule 63
	smeq           reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	';'            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	']'            reduce using rule 63


State 46

	LValue -> stringconst .                             (rule 55)

	and            reduce using rule 55
	div            reduce using rule 55
	do             reduce using rule 55
	else           reduce using rule 55
	end            reduce using rule 55
	mod            reduce using rule 55
	or             reduce using rule 55
	then           reduce using rule 55
	'='            reduce using rule 55
	'>'            reduce using rule 55
	'<'            reduce using rule 55
	diff           reduce using rule 55
	greq           reduce using rule 55
	smeq           reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'^'            reduce using rule 55
	equal          reduce using rule 55
	';'            reduce using rule 55
	')'            reduce using rule 55
	','            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55


State 47

	RValue -> '+' . Expr                                (rule 69)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 60
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 48

	RValue -> '-' . Expr                                (rule 70)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 58
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 49

	RValue -> '@' . LValue                              (rule 67)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 27
	LValue         goto state 57
	RValue         goto state 29
	Call           goto state 55

State 50

	LValue -> '(' . LValue ')'                          (rule 58)
	RValue -> '(' . RValue ')'                          (rule 64)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 27
	LValue         goto state 53
	RValue         goto state 54
	Call           goto state 55

State 51

	Local -> Header ';' . Body ';'                      (rule 7)

	begin          reduce using rule 4
	forward        reduce using rule 4
	function       reduce using rule 4
	label          reduce using rule 4
	procedure      reduce using rule 4
	var            reduce using rule 4

	Body           goto state 52
	Locals         goto state 7

State 52

	Local -> Header ';' Body . ';'                      (rule 7)

	';'            shift, and enter state 133


State 53

	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)
	LValue -> '(' LValue . ')'                          (rule 58)

	and            reduce using rule 51
	div            reduce using rule 51
	mod            reduce using rule 51
	or             reduce using rule 51
	'='            reduce using rule 51
	'>'            reduce using rule 51
	'<'            reduce using rule 51
	diff           reduce using rule 51
	greq           reduce using rule 51
	smeq           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	')'            shift, and enter state 132
	'['            shift, and enter state 72


State 54

	Expr -> RValue .                                    (rule 52)
	RValue -> '(' RValue . ')'                          (rule 64)

	and            reduce using rule 52
	div            reduce using rule 52
	mod            reduce using rule 52
	or             reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	')'            shift, and enter state 131


State 55

	RValue -> Call .                                    (rule 66)

	and            reduce using rule 66
	div            reduce using rule 66
	do             reduce using rule 66
	else           reduce using rule 66
	end            reduce using rule 66
	mod            reduce using rule 66
	or             reduce using rule 66
	then           reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'<'            reduce using rule 66
	diff           reduce using rule 66
	greq           reduce using rule 66
	smeq           reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	';'            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	']'            reduce using rule 66


State 56

	LValue -> id .                                      (rule 53)
	Call -> id . '(' ArgExprs ')'                       (rule 85)

	and            reduce using rule 53
	div            reduce using rule 53
	do             reduce using rule 53
	else           reduce using rule 53
	end            reduce using rule 53
	mod            reduce using rule 53
	or             reduce using rule 53
	then           reduce using rule 53
	'='            reduce using rule 53
	'>'            reduce using rule 53
	'<'            reduce using rule 53
	diff           reduce using rule 53
	greq           reduce using rule 53
	smeq           reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'^'            reduce using rule 53
	';'            reduce using rule 53
	'('            shift, and enter state 61
	')'            reduce using rule 53
	','            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53


State 57

	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)
	RValue -> '@' LValue .                              (rule 67)

	and            reduce using rule 67
			(reduce using rule 51)

	div            reduce using rule 67
			(reduce using rule 51)

	do             reduce using rule 67
	else           reduce using rule 67
	end            reduce using rule 67
	mod            reduce using rule 67
			(reduce using rule 51)

	or             reduce using rule 67
			(reduce using rule 51)

	then           reduce using rule 67
	'='            reduce using rule 67
			(reduce using rule 51)

	'>'            reduce using rule 67
			(reduce using rule 51)

	'<'            reduce using rule 67
			(reduce using rule 51)

	diff           reduce using rule 67
			(reduce using rule 51)

	greq           reduce using rule 67
			(reduce using rule 51)

	smeq           reduce using rule 67
			(reduce using rule 51)

	'+'            reduce using rule 67
			(reduce using rule 51)

	'-'            reduce using rule 67
			(reduce using rule 51)

	'*'            reduce using rule 67
			(reduce using rule 51)

	'/'            reduce using rule 67
			(reduce using rule 51)

	'^'            reduce using rule 67
			(reduce using rule 51)

	';'            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	'['            shift, and enter state 72
	']'            reduce using rule 67


State 58

	LValue -> Expr . '^'                                (rule 57)
	RValue -> '-' Expr .                                (rule 70)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 70
	div            reduce using rule 70
	do             reduce using rule 70
	else           reduce using rule 70
	end            reduce using rule 70
	mod            reduce using rule 70
	or             reduce using rule 70
	then           reduce using rule 70
	'='            reduce using rule 70
	'>'            reduce using rule 70
	'<'            reduce using rule 70
	diff           reduce using rule 70
	greq           reduce using rule 70
	smeq           reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	'^'            shift, and enter state 87
	';'            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	']'            reduce using rule 70


State 59

	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)

	and            reduce using rule 51
	div            reduce using rule 51
	do             reduce using rule 51
	else           reduce using rule 51
	end            reduce using rule 51
	mod            reduce using rule 51
	or             reduce using rule 51
	then           reduce using rule 51
	'='            reduce using rule 51
	'>'            reduce using rule 51
	'<'            reduce using rule 51
	diff           reduce using rule 51
	greq           reduce using rule 51
	smeq           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	';'            reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	'['            shift, and enter state 72
	']'            reduce using rule 51


State 60

	LValue -> Expr . '^'                                (rule 57)
	RValue -> '+' Expr .                                (rule 69)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 69
	div            reduce using rule 69
	do             reduce using rule 69
	else           reduce using rule 69
	end            reduce using rule 69
	mod            reduce using rule 69
	or             reduce using rule 69
	then           reduce using rule 69
	'='            reduce using rule 69
	'>'            reduce using rule 69
	'<'            reduce using rule 69
	diff           reduce using rule 69
	greq           reduce using rule 69
	smeq           reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'^'            shift, and enter state 87
	';'            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	']'            reduce using rule 69


State 61

	Call -> id '(' . ArgExprs ')'                       (rule 85)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50
	')'            reduce using rule 87

	Expr           goto state 129
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55
	ArgExprs       goto state 130

State 62

	Stmt -> id ':' . Stmt                               (rule 40)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 34
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 128
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 63

	Stmt -> while Expr . do Stmt                        (rule 39)
	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             shift, and enter state 127
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87


State 64

	LValue -> Expr . '^'                                (rule 57)
	RValue -> not Expr .                                (rule 68)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 68
	div            reduce using rule 68
	do             reduce using rule 68
	else           reduce using rule 68
	end            reduce using rule 68
	mod            reduce using rule 68
	or             reduce using rule 68
	then           reduce using rule 68
	'='            reduce using rule 68
	'>'            reduce using rule 68
	'<'            reduce using rule 68
	diff           reduce using rule 68
	greq           reduce using rule 68
	smeq           reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'^'            shift, and enter state 87
	';'            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	']'            reduce using rule 68


State 65

	Stmt -> new New . LValue                            (rule 43)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 27
	LValue         goto state 126
	RValue         goto state 29
	Call           goto state 55

State 66

	New -> '[' . Expr ']'                               (rule 47)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 125
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 67

	Stmt -> if Expr . then Stmt Else                    (rule 38)
	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           shift, and enter state 124
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87


State 68

	Stmt -> goto id .                                   (rule 41)

	else           reduce using rule 41
	end            reduce using rule 41
	';'            reduce using rule 41


State 69

	Stmt -> dispose Dispose . LValue                    (rule 44)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 27
	LValue         goto state 123
	RValue         goto state 29
	Call           goto state 55

State 70

	Dispose -> '[' . ']'                                (rule 49)

	']'            shift, and enter state 122


State 71

	Stmt -> LValue equal . Expr                         (rule 35)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 121
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 72

	LValue -> LValue '[' . Expr ']'                     (rule 56)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 120
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 73

	RValue -> Expr and . Expr                           (rule 78)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 119
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 74

	RValue -> Expr div . Expr                           (rule 75)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 118
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 75

	RValue -> Expr mod . Expr                           (rule 76)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 117
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 76

	RValue -> Expr or . Expr                            (rule 77)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 116
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 77

	RValue -> Expr '=' . Expr                           (rule 79)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 115
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 78

	RValue -> Expr '>' . Expr                           (rule 82)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 114
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 79

	RValue -> Expr '<' . Expr                           (rule 81)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 113
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 80

	RValue -> Expr diff . Expr                          (rule 80)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 112
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 81

	RValue -> Expr greq . Expr                          (rule 83)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 111
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 82

	RValue -> Expr smeq . Expr                          (rule 84)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 110
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 83

	RValue -> Expr '+' . Expr                           (rule 71)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 109
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 84

	RValue -> Expr '-' . Expr                           (rule 73)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 108
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 85

	RValue -> Expr '*' . Expr                           (rule 72)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 107
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 86

	RValue -> Expr '/' . Expr                           (rule 74)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 106
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 87

	LValue -> Expr '^' .                                (rule 57)

	and            reduce using rule 57
	div            reduce using rule 57
	do             reduce using rule 57
	else           reduce using rule 57
	end            reduce using rule 57
	mod            reduce using rule 57
	or             reduce using rule 57
	then           reduce using rule 57
	'='            reduce using rule 57
	'>'            reduce using rule 57
	'<'            reduce using rule 57
	diff           reduce using rule 57
	greq           reduce using rule 57
	smeq           reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'^'            reduce using rule 57
	equal          reduce using rule 57
	';'            reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57


State 88

	Block -> begin Stmt Stmts . end                     (rule 31)
	Stmts -> Stmts . ';' Stmt                           (rule 32)

	end            shift, and enter state 104
	';'            shift, and enter state 105


State 89

	Local -> forward Header ';' .                       (rule 8)

	begin          reduce using rule 8
	forward        reduce using rule 8
	function       reduce using rule 8
	label          reduce using rule 8
	procedure      reduce using rule 8
	var            reduce using rule 8


State 90

	Header -> function id '(' . Args ')' ':' Type       (rule 15)

	var            shift, and enter state 101
	id             reduce using rule 21
	')'            reduce using rule 16

	Args           goto state 103
	Formals        goto state 98
	Formal         goto state 99
	Vars           goto state 100

State 91

	Local -> label id Ids . ';'                         (rule 6)
	Ids -> Ids . ',' id                                 (rule 12)

	';'            shift, and enter state 102
	','            shift, and enter state 96


State 92

	Header -> procedure id '(' . Args ')'               (rule 14)

	var            shift, and enter state 101
	id             reduce using rule 21
	')'            reduce using rule 16

	Args           goto state 97
	Formals        goto state 98
	Formal         goto state 99
	Vars           goto state 100

State 93

	IdsAndType -> id Ids . ':' Type ';'                 (rule 11)
	Ids -> Ids . ',' id                                 (rule 12)

	':'            shift, and enter state 95
	','            shift, and enter state 96


State 94

	Variables -> Variables IdsAndType .                 (rule 9)

	begin          reduce using rule 9
	forward        reduce using rule 9
	function       reduce using rule 9
	label          reduce using rule 9
	procedure      reduce using rule 9
	var            reduce using rule 9
	id             reduce using rule 9


State 95

	IdsAndType -> id Ids ':' . Type ';'                 (rule 11)

	array          shift, and enter state 147
	boolean        shift, and enter state 148
	char           shift, and enter state 149
	integer        shift, and enter state 150
	real           shift, and enter state 151
	'^'            shift, and enter state 152

	Type           goto state 146

State 96

	Ids -> Ids ',' . id                                 (rule 12)

	id             shift, and enter state 145


State 97

	Header -> procedure id '(' Args . ')'               (rule 14)

	')'            shift, and enter state 144


State 98

	Args -> Formals .                                   (rule 17)
	Formals -> Formals . ';' Formal                     (rule 18)

	';'            shift, and enter state 143
	')'            reduce using rule 17


State 99

	Formals -> Formal .                                 (rule 19)

	';'            reduce using rule 19
	')'            reduce using rule 19


State 100

	Formal -> Vars . id Ids ':' Type                    (rule 20)

	id             shift, and enter state 142


State 101

	Vars -> var .                                       (rule 22)

	id             reduce using rule 22


State 102

	Local -> label id Ids ';' .                         (rule 6)

	begin          reduce using rule 6
	forward        reduce using rule 6
	function       reduce using rule 6
	label          reduce using rule 6
	procedure      reduce using rule 6
	var            reduce using rule 6


State 103

	Header -> function id '(' Args . ')' ':' Type       (rule 15)

	')'            shift, and enter state 141


State 104

	Block -> begin Stmt Stmts end .                     (rule 31)

	else           reduce using rule 31
	end            reduce using rule 31
	';'            reduce using rule 31
	'.'            reduce using rule 31


State 105

	Stmts -> Stmts ';' . Stmt                           (rule 32)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 140
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 106

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr '/' Expr .                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 74
	div            reduce using rule 74
	do             reduce using rule 74
	else           reduce using rule 74
	end            reduce using rule 74
	mod            reduce using rule 74
	or             reduce using rule 74
	then           reduce using rule 74
	'='            reduce using rule 74
	'>'            reduce using rule 74
	'<'            reduce using rule 74
	diff           reduce using rule 74
	greq           reduce using rule 74
	smeq           reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'^'            shift, and enter state 87
	';'            reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	']'            reduce using rule 74


State 107

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr '*' Expr .                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 72
	div            reduce using rule 72
	do             reduce using rule 72
	else           reduce using rule 72
	end            reduce using rule 72
	mod            reduce using rule 72
	or             reduce using rule 72
	then           reduce using rule 72
	'='            reduce using rule 72
	'>'            reduce using rule 72
	'<'            reduce using rule 72
	diff           reduce using rule 72
	greq           reduce using rule 72
	smeq           reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	'^'            shift, and enter state 87
	';'            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	']'            reduce using rule 72


State 108

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr '-' Expr .                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 73
	else           reduce using rule 73
	end            reduce using rule 73
	mod            shift, and enter state 75
	or             reduce using rule 73
	then           reduce using rule 73
	'='            reduce using rule 73
	'>'            reduce using rule 73
	'<'            reduce using rule 73
	diff           reduce using rule 73
	greq           reduce using rule 73
	smeq           reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	']'            reduce using rule 73


State 109

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr '+' Expr .                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 71
	else           reduce using rule 71
	end            reduce using rule 71
	mod            shift, and enter state 75
	or             reduce using rule 71
	then           reduce using rule 71
	'='            reduce using rule 71
	'>'            reduce using rule 71
	'<'            reduce using rule 71
	diff           reduce using rule 71
	greq           reduce using rule 71
	smeq           reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	']'            reduce using rule 71


State 110

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)
	RValue -> Expr smeq Expr .                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 84
	else           reduce using rule 84
	end            reduce using rule 84
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 84
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	']'            reduce using rule 84


State 111

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr greq Expr .                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 83
	else           reduce using rule 83
	end            reduce using rule 83
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 83
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	']'            reduce using rule 83


State 112

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr diff Expr .                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 80
	else           reduce using rule 80
	end            reduce using rule 80
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 80
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	']'            reduce using rule 80


State 113

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr '<' Expr .                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 81
	else           reduce using rule 81
	end            reduce using rule 81
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 81
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	']'            reduce using rule 81


State 114

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr '>' Expr .                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 82
	else           reduce using rule 82
	end            reduce using rule 82
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 82
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 82
	')'            reduce using rule 82
	','            reduce using rule 82
	']'            reduce using rule 82


State 115

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr '=' Expr .                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 79
	else           reduce using rule 79
	end            reduce using rule 79
	mod            shift, and enter state 75
	or             shift, and enter state 76
	then           reduce using rule 79
	'='            fail
	'>'            fail
	'<'            fail
	diff           fail
	greq           fail
	smeq           fail
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	']'            reduce using rule 79


State 116

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr or Expr .                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	do             reduce using rule 77
	else           reduce using rule 77
	end            reduce using rule 77
	mod            shift, and enter state 75
	or             reduce using rule 77
	then           reduce using rule 77
	'='            reduce using rule 77
	'>'            reduce using rule 77
	'<'            reduce using rule 77
	diff           reduce using rule 77
	greq           reduce using rule 77
	smeq           reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	']'            reduce using rule 77


State 117

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr mod Expr .                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 76
	div            reduce using rule 76
	do             reduce using rule 76
	else           reduce using rule 76
	end            reduce using rule 76
	mod            reduce using rule 76
	or             reduce using rule 76
	then           reduce using rule 76
	'='            reduce using rule 76
	'>'            reduce using rule 76
	'<'            reduce using rule 76
	diff           reduce using rule 76
	greq           reduce using rule 76
	smeq           reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'^'            shift, and enter state 87
	';'            reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	']'            reduce using rule 76


State 118

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr div Expr .                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 75
	div            reduce using rule 75
	do             reduce using rule 75
	else           reduce using rule 75
	end            reduce using rule 75
	mod            reduce using rule 75
	or             reduce using rule 75
	then           reduce using rule 75
	'='            reduce using rule 75
	'>'            reduce using rule 75
	'<'            reduce using rule 75
	diff           reduce using rule 75
	greq           reduce using rule 75
	smeq           reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	'^'            shift, and enter state 87
	';'            reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	']'            reduce using rule 75


State 119

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr and Expr .                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            reduce using rule 78
	div            reduce using rule 78
	do             reduce using rule 78
	else           reduce using rule 78
	end            reduce using rule 78
	mod            reduce using rule 78
	or             reduce using rule 78
	then           reduce using rule 78
	'='            reduce using rule 78
	'>'            reduce using rule 78
	'<'            reduce using rule 78
	diff           reduce using rule 78
	greq           reduce using rule 78
	smeq           reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            reduce using rule 78
	'/'            reduce using rule 78
	'^'            shift, and enter state 87
	';'            reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	']'            reduce using rule 78


State 120

	LValue -> LValue '[' Expr . ']'                     (rule 56)
	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	']'            shift, and enter state 139


State 121

	Stmt -> LValue equal Expr .                         (rule 35)
	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	else           reduce using rule 35
	end            reduce using rule 35
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	';'            reduce using rule 35


State 122

	Dispose -> '[' ']' .                                (rule 49)

	false          reduce using rule 49
	nil            reduce using rule 49
	not            reduce using rule 49
	result         reduce using rule 49
	true           reduce using rule 49
	id             reduce using rule 49
	intconst       reduce using rule 49
	realconst      reduce using rule 49
	charconst      reduce using rule 49
	stringconst    reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'@'            reduce using rule 49
	'('            reduce using rule 49


State 123

	Stmt -> dispose Dispose LValue .                    (rule 44)
	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)

	and            reduce using rule 51
	div            reduce using rule 51
	else           reduce using rule 44
	end            reduce using rule 44
	mod            reduce using rule 51
	or             reduce using rule 51
	'='            reduce using rule 51
	'>'            reduce using rule 51
	'<'            reduce using rule 51
	diff           reduce using rule 51
	greq           reduce using rule 51
	smeq           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	';'            reduce using rule 44
	'['            shift, and enter state 72


State 124

	Stmt -> if Expr then . Stmt Else                    (rule 38)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 34
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 138
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 125

	New -> '[' Expr . ']'                               (rule 47)
	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	']'            shift, and enter state 137


State 126

	Stmt -> new New LValue .                            (rule 43)
	Expr -> LValue .                                    (rule 51)
	LValue -> LValue . '[' Expr ']'                     (rule 56)

	and            reduce using rule 51
	div            reduce using rule 51
	else           reduce using rule 43
	end            reduce using rule 43
	mod            reduce using rule 51
	or             reduce using rule 51
	'='            reduce using rule 51
	'>'            reduce using rule 51
	'<'            reduce using rule 51
	diff           reduce using rule 51
	greq           reduce using rule 51
	smeq           reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	';'            reduce using rule 43
	'['            shift, and enter state 72


State 127

	Stmt -> while Expr do . Stmt                        (rule 39)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 34
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 136
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 128

	Stmt -> id ':' Stmt .                               (rule 40)

	else           reduce using rule 40
	end            reduce using rule 40
	';'            reduce using rule 40


State 129

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)
	ArgExprs -> Expr . Exprs                            (rule 86)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            reduce using rule 89
	','            reduce using rule 89

	Exprs          goto state 135

State 130

	Call -> id '(' ArgExprs . ')'                       (rule 85)

	')'            shift, and enter state 134


State 131

	RValue -> '(' RValue ')' .                          (rule 64)

	and            reduce using rule 64
	div            reduce using rule 64
	do             reduce using rule 64
	else           reduce using rule 64
	end            reduce using rule 64
	mod            reduce using rule 64
	or             reduce using rule 64
	then           reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'<'            reduce using rule 64
	diff           reduce using rule 64
	greq           reduce using rule 64
	smeq           reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	';'            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	']'            reduce using rule 64


State 132

	LValue -> '(' LValue ')' .                          (rule 58)

	and            reduce using rule 58
	div            reduce using rule 58
	do             reduce using rule 58
	else           reduce using rule 58
	end            reduce using rule 58
	mod            reduce using rule 58
	or             reduce using rule 58
	then           reduce using rule 58
	'='            reduce using rule 58
	'>'            reduce using rule 58
	'<'            reduce using rule 58
	diff           reduce using rule 58
	greq           reduce using rule 58
	smeq           reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	equal          reduce using rule 58
	';'            reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58


State 133

	Local -> Header ';' Body ';' .                      (rule 7)

	begin          reduce using rule 7
	forward        reduce using rule 7
	function       reduce using rule 7
	label          reduce using rule 7
	procedure      reduce using rule 7
	var            reduce using rule 7


State 134

	Call -> id '(' ArgExprs ')' .                       (rule 85)

	and            reduce using rule 85
	div            reduce using rule 85
	do             reduce using rule 85
	else           reduce using rule 85
	end            reduce using rule 85
	mod            reduce using rule 85
	or             reduce using rule 85
	then           reduce using rule 85
	'='            reduce using rule 85
	'>'            reduce using rule 85
	'<'            reduce using rule 85
	diff           reduce using rule 85
	greq           reduce using rule 85
	smeq           reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'*'            reduce using rule 85
	'/'            reduce using rule 85
	'^'            reduce using rule 85
	';'            reduce using rule 85
	')'            reduce using rule 85
	','            reduce using rule 85
	']'            reduce using rule 85


State 135

	ArgExprs -> Expr Exprs .                            (rule 86)
	Exprs -> Exprs . ',' Expr                           (rule 88)

	')'            reduce using rule 86
	','            shift, and enter state 162


State 136

	Stmt -> while Expr do Stmt .                        (rule 39)

	else           reduce using rule 39
	end            reduce using rule 39
	';'            reduce using rule 39


State 137

	New -> '[' Expr ']' .                               (rule 47)

	false          reduce using rule 47
	nil            reduce using rule 47
	not            reduce using rule 47
	result         reduce using rule 47
	true           reduce using rule 47
	id             reduce using rule 47
	intconst       reduce using rule 47
	realconst      reduce using rule 47
	charconst      reduce using rule 47
	stringconst    reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'@'            reduce using rule 47
	'('            reduce using rule 47


State 138

	Stmt -> if Expr then Stmt . Else                    (rule 38)

	else           shift, and enter state 161
			(reduce using rule 46)

	end            reduce using rule 46
	';'            reduce using rule 46

	Else           goto state 160

State 139

	LValue -> LValue '[' Expr ']' .                     (rule 56)

	and            reduce using rule 56
	div            reduce using rule 56
	do             reduce using rule 56
	else           reduce using rule 56
	end            reduce using rule 56
	mod            reduce using rule 56
	or             reduce using rule 56
	then           reduce using rule 56
	'='            reduce using rule 56
	'>'            reduce using rule 56
	'<'            reduce using rule 56
	diff           reduce using rule 56
	greq           reduce using rule 56
	smeq           reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'^'            reduce using rule 56
	equal          reduce using rule 56
	';'            reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56


State 140

	Stmts -> Stmts ';' Stmt .                           (rule 32)

	end            reduce using rule 32
	';'            reduce using rule 32


State 141

	Header -> function id '(' Args ')' . ':' Type       (rule 15)

	':'            shift, and enter state 159


State 142

	Formal -> Vars id . Ids ':' Type                    (rule 20)

	':'            reduce using rule 13
	','            reduce using rule 13

	Ids            goto state 158

State 143

	Formals -> Formals ';' . Formal                     (rule 18)

	var            shift, and enter state 101
	id             reduce using rule 21

	Formal         goto state 157
	Vars           goto state 100

State 144

	Header -> procedure id '(' Args ')' .               (rule 14)

	';'            reduce using rule 14


State 145

	Ids -> Ids ',' id .                                 (rule 12)

	';'            reduce using rule 12
	':'            reduce using rule 12
	','            reduce using rule 12


State 146

	IdsAndType -> id Ids ':' Type . ';'                 (rule 11)

	';'            shift, and enter state 156


State 147

	Type -> array . ArrSize of Type                     (rule 27)

	of             reduce using rule 30
	'['            shift, and enter state 155

	ArrSize        goto state 154

State 148

	Type -> boolean .                                   (rule 25)

	';'            reduce using rule 25
	')'            reduce using rule 25


State 149

	Type -> char .                                      (rule 26)

	';'            reduce using rule 26
	')'            reduce using rule 26


State 150

	Type -> integer .                                   (rule 23)

	';'            reduce using rule 23
	')'            reduce using rule 23


State 151

	Type -> real .                                      (rule 24)

	';'            reduce using rule 24
	')'            reduce using rule 24


State 152

	Type -> '^' . Type                                  (rule 28)

	array          shift, and enter state 147
	boolean        shift, and enter state 148
	char           shift, and enter state 149
	integer        shift, and enter state 150
	real           shift, and enter state 151
	'^'            shift, and enter state 152

	Type           goto state 153

State 153

	Type -> '^' Type .                                  (rule 28)

	';'            reduce using rule 28
	')'            reduce using rule 28


State 154

	Type -> array ArrSize . of Type                     (rule 27)

	of             shift, and enter state 168


State 155

	ArrSize -> '[' . intconst ']'                       (rule 29)

	intconst       shift, and enter state 167


State 156

	IdsAndType -> id Ids ':' Type ';' .                 (rule 11)

	begin          reduce using rule 11
	forward        reduce using rule 11
	function       reduce using rule 11
	label          reduce using rule 11
	procedure      reduce using rule 11
	var            reduce using rule 11
	id             reduce using rule 11


State 157

	Formals -> Formals ';' Formal .                     (rule 18)

	';'            reduce using rule 18
	')'            reduce using rule 18


State 158

	Ids -> Ids . ',' id                                 (rule 12)
	Formal -> Vars id Ids . ':' Type                    (rule 20)

	':'            shift, and enter state 166
	','            shift, and enter state 96


State 159

	Header -> function id '(' Args ')' ':' . Type       (rule 15)

	array          shift, and enter state 147
	boolean        shift, and enter state 148
	char           shift, and enter state 149
	integer        shift, and enter state 150
	real           shift, and enter state 151
	'^'            shift, and enter state 152

	Type           goto state 165

State 160

	Stmt -> if Expr then Stmt Else .                    (rule 38)

	else           reduce using rule 38
	end            reduce using rule 38
	';'            reduce using rule 38


State 161

	Else -> else . Stmt                                 (rule 45)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 34
	end            reduce using rule 34
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 34
	'('            shift, and enter state 50

	Block          goto state 25
	Stmt           goto state 164
	Expr           goto state 27
	LValue         goto state 28
	RValue         goto state 29
	Call           goto state 30

State 162

	Exprs -> Exprs ',' . Expr                           (rule 88)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 163
	LValue         goto state 59
	RValue         goto state 29
	Call           goto state 55

State 163

	LValue -> Expr . '^'                                (rule 57)
	RValue -> Expr . '+' Expr                           (rule 71)
	RValue -> Expr . '*' Expr                           (rule 72)
	RValue -> Expr . '-' Expr                           (rule 73)
	RValue -> Expr . '/' Expr                           (rule 74)
	RValue -> Expr . div Expr                           (rule 75)
	RValue -> Expr . mod Expr                           (rule 76)
	RValue -> Expr . or Expr                            (rule 77)
	RValue -> Expr . and Expr                           (rule 78)
	RValue -> Expr . '=' Expr                           (rule 79)
	RValue -> Expr . diff Expr                          (rule 80)
	RValue -> Expr . '<' Expr                           (rule 81)
	RValue -> Expr . '>' Expr                           (rule 82)
	RValue -> Expr . greq Expr                          (rule 83)
	RValue -> Expr . smeq Expr                          (rule 84)
	Exprs -> Exprs ',' Expr .                           (rule 88)

	and            shift, and enter state 73
	div            shift, and enter state 74
	mod            shift, and enter state 75
	or             shift, and enter state 76
	'='            shift, and enter state 77
	'>'            shift, and enter state 78
	'<'            shift, and enter state 79
	diff           shift, and enter state 80
	greq           shift, and enter state 81
	smeq           shift, and enter state 82
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'*'            shift, and enter state 85
	'/'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            reduce using rule 88
	','            reduce using rule 88


State 164

	Else -> else Stmt .                                 (rule 45)

	else           reduce using rule 45
	end            reduce using rule 45
	';'            reduce using rule 45


State 165

	Header -> function id '(' Args ')' ':' Type .       (rule 15)

	';'            reduce using rule 15


State 166

	Formal -> Vars id Ids ':' . Type                    (rule 20)

	array          shift, and enter state 147
	boolean        shift, and enter state 148
	char           shift, and enter state 149
	integer        shift, and enter state 150
	real           shift, and enter state 151
	'^'            shift, and enter state 152

	Type           goto state 171

State 167

	ArrSize -> '[' intconst . ']'                       (rule 29)

	']'            shift, and enter state 170


State 168

	Type -> array ArrSize of . Type                     (rule 27)

	array          shift, and enter state 147
	boolean        shift, and enter state 148
	char           shift, and enter state 149
	integer        shift, and enter state 150
	real           shift, and enter state 151
	'^'            shift, and enter state 152

	Type           goto state 169

State 169

	Type -> array ArrSize of Type .                     (rule 27)

	';'            reduce using rule 27
	')'            reduce using rule 27


State 170

	ArrSize -> '[' intconst ']' .                       (rule 29)

	of             reduce using rule 29


State 171

	Formal -> Vars id Ids ':' Type .                    (rule 20)

	';'            reduce using rule 20
	')'            reduce using rule 20


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 90
Number of terminals: 58
Number of non-terminals: 27
Number of states: 172

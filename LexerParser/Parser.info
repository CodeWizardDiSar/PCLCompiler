-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from Parser.y
-----------------------------------------------------------------------------

state 57 contains 15 reduce/reduce conflicts.
state 68 contains 15 shift/reduce conflicts.
state 109 contains 15 shift/reduce conflicts.
state 128 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Program                             (0)
	Program -> program id ';' Body '.'                 (1)
	Body -> Bodyrec Block                              (2)
	Bodyrec -> Bodyrec Local                           (3)
	Bodyrec ->                                         (4)
	Local -> var Variables                             (5)
	Local -> label id Labels ';'                       (6)
	Local -> Header ';' Body ';'                       (7)
	Local -> forward Header ';'                        (8)
	Variables -> Variables id Morevariables ':' Type ';'   (9)
	Variables -> id Morevariables ':' Type ';'         (10)
	Morevariables -> Morevariables ',' id              (11)
	Morevariables ->                                   (12)
	Labels -> Labels ',' id                            (13)
	Labels ->                                          (14)
	Header -> procedure id '(' Arguments1 ')'          (15)
	Header -> function id '(' Arguments1 ')' ':' Type   (16)
	Arguments1 ->                                      (17)
	Arguments1 -> Arguments2                           (18)
	Arguments2 -> Arguments2 ';' Formal                (19)
	Arguments2 -> Formal                               (20)
	Formal -> Vars id Labels ':' Type                  (21)
	Vars ->                                            (22)
	Vars -> var                                        (23)
	Type -> integer                                    (24)
	Type -> real                                       (25)
	Type -> boolean                                    (26)
	Type -> char                                       (27)
	Type -> array Array of Type                        (28)
	Type -> '^' Type                                   (29)
	Array -> '[' intconst ']'                          (30)
	Array ->                                           (31)
	Block -> begin Stmt Stmts end                      (32)
	Stmts -> Stmts ';' Stmt                            (33)
	Stmts ->                                           (34)
	Stmt ->                                            (35)
	Stmt -> LValue equal Expr                          (36)
	Stmt -> Block                                      (37)
	Stmt -> Call                                       (38)
	Stmt -> if Expr then Stmt Else                     (39)
	Stmt -> while Expr do Stmt                         (40)
	Stmt -> id ':' Stmt                                (41)
	Stmt -> goto id                                    (42)
	Stmt -> return                                     (43)
	Stmt -> new New LValue                             (44)
	Stmt -> dispose Dispose LValue                     (45)
	Else -> else Stmt                                  (46)
	Else ->                                            (47)
	New -> '[' Expr ']'                                (48)
	New ->                                             (49)
	Dispose -> '[' ']'                                 (50)
	Dispose ->                                         (51)
	Expr -> LValue                                     (52)
	Expr -> RValue                                     (53)
	LValue -> id                                       (54)
	LValue -> result                                   (55)
	LValue -> stringconst                              (56)
	LValue -> LValue '[' Expr ']'                      (57)
	LValue -> Expr '^'                                 (58)
	LValue -> '(' LValue ')'                           (59)
	RValue -> intconst                                 (60)
	RValue -> true                                     (61)
	RValue -> false                                    (62)
	RValue -> realconst                                (63)
	RValue -> charconst                                (64)
	RValue -> '(' RValue ')'                           (65)
	RValue -> nil                                      (66)
	RValue -> Call                                     (67)
	RValue -> '@' LValue                               (68)
	RValue -> Unop Expr                                (69)
	RValue -> Expr '+' Expr                            (70)
	RValue -> Expr '*' Expr                            (71)
	RValue -> Expr Binop Expr                          (72)
	Call -> id '(' Call2 ')'                           (73)
	Call2 ->                                           (74)
	Call2 -> Expr Call3                                (75)
	Call3 -> Call3 ',' Expr                            (76)
	Call3 ->                                           (77)
	Unop -> not                                        (78)
	Unop -> '+'                                        (79)
	Unop -> '-'                                        (80)
	Binop -> '-'                                       (81)
	Binop -> '/'                                       (82)
	Binop -> div                                       (83)
	Binop -> mod                                       (84)
	Binop -> or                                        (85)
	Binop -> and                                       (86)
	Binop -> '='                                       (87)
	Binop -> diff                                      (88)
	Binop -> '<'                                       (89)
	Binop -> '>'                                       (90)
	Binop -> greq                                      (91)
	Binop -> smeq                                      (92)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	and            { TAnd }
	array          { TArray }
	begin          { TBegin }
	boolean        { TBoolean }
	char           { TChar }
	dispose        { TDispose }
	div            { TDivInt }
	do             { TDo }
	else           { TElse }
	end            { TEnd }
	false          { TFalse }
	forward        { TForward }
	function       { TFunction }
	goto           { TGoto }
	if             { TIf }
	integer        { TInteger }
	label          { TLabel }
	mod            { TMod }
	new            { TNew }
	nil            { TNil }
	not            { TNot }
	of             { TOf }
	or             { TOr }
	procedure      { TProcedure }
	program        { TProgram }
	real           { TReal }
	result         { TResult }
	return         { TReturn }
	then           { TThen }
	true           { TTrue }
	var            { TVar }
	while          { TWhile }
	id             { TId $$ }
	intconst       { TIntconst $$ }
	realconst      { TRealconst $$ }
	charconst      { TCharconst $$ }
	stringconst    { TStringconst $$ }
	'='            { TLogiceq }
	'>'            { TGreater }
	'<'            { TSmaller }
	diff           { TDifferent }
	greq           { TGreaterequal }
	smeq           { TSmallerequal }
	'+'            { TAdd }
	'-'            { TMinus }
	'*'            { TMul }
	'/'            { TDivReal }
	'^'            { TPointer }
	'@'            { TAdress }
	equal          { TEq }
	';'            { TSeperator }
	'.'            { TDot }
	'('            { TLeftparen }
	')'            { TRightparen }
	':'            { TUpdown }
	','            { TComma }
	'['            { TLeftbracket }
	']'            { TRightbracket }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Program         rule  1
	Body            rule  2
	Bodyrec         rules 3, 4
	Local           rules 5, 6, 7, 8
	Variables       rules 9, 10
	Morevariables   rules 11, 12
	Labels          rules 13, 14
	Header          rules 15, 16
	Arguments1      rules 17, 18
	Arguments2      rules 19, 20
	Formal          rule  21
	Vars            rules 22, 23
	Type            rules 24, 25, 26, 27, 28, 29
	Array           rules 30, 31
	Block           rule  32
	Stmts           rules 33, 34
	Stmt            rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45
	Else            rules 46, 47
	New             rules 48, 49
	Dispose         rules 50, 51
	Expr            rules 52, 53
	LValue          rules 54, 55, 56, 57, 58, 59
	RValue          rules 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72
	Call            rule  73
	Call2           rules 74, 75
	Call3           rules 76, 77
	Unop            rules 78, 79, 80
	Binop           rules 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	program        shift, and enter state 2

	Program        goto state 3

State 1


	program        shift, and enter state 2


State 2

	Program -> program . id ';' Body '.'                (rule 1)

	id             shift, and enter state 4


State 3

	%start_calc -> Program .                            (rule 0)

	%eof           accept


State 4

	Program -> program id . ';' Body '.'                (rule 1)

	';'            shift, and enter state 5


State 5

	Program -> program id ';' . Body '.'                (rule 1)

	begin          reduce using rule 4
	forward        reduce using rule 4
	function       reduce using rule 4
	label          reduce using rule 4
	procedure      reduce using rule 4
	var            reduce using rule 4

	Body           goto state 6
	Bodyrec        goto state 7

State 6

	Program -> program id ';' Body . '.'                (rule 1)

	'.'            shift, and enter state 17


State 7

	Body -> Bodyrec . Block                             (rule 2)
	Bodyrec -> Bodyrec . Local                          (rule 3)

	begin          shift, and enter state 11
	forward        shift, and enter state 12
	function       shift, and enter state 13
	label          shift, and enter state 14
	procedure      shift, and enter state 15
	var            shift, and enter state 16

	Local          goto state 8
	Header         goto state 9
	Block          goto state 10

State 8

	Bodyrec -> Bodyrec Local .                          (rule 3)

	begin          reduce using rule 3
	forward        reduce using rule 3
	function       reduce using rule 3
	label          reduce using rule 3
	procedure      reduce using rule 3
	var            reduce using rule 3


State 9

	Local -> Header . ';' Body ';'                      (rule 7)

	';'            shift, and enter state 51


State 10

	Body -> Bodyrec Block .                             (rule 2)

	';'            reduce using rule 2
	'.'            reduce using rule 2


State 11

	Block -> begin . Stmt Stmts end                     (rule 32)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 25
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 12

	Local -> forward . Header ';'                       (rule 8)

	function       shift, and enter state 13
	procedure      shift, and enter state 15

	Header         goto state 23

State 13

	Header -> function . id '(' Arguments1 ')' ':' Type    (rule 16)

	id             shift, and enter state 22


State 14

	Local -> label . id Labels ';'                      (rule 6)

	id             shift, and enter state 21


State 15

	Header -> procedure . id '(' Arguments1 ')'         (rule 15)

	id             shift, and enter state 20


State 16

	Local -> var . Variables                            (rule 5)

	id             shift, and enter state 19

	Variables      goto state 18

State 17

	Program -> program id ';' Body '.' .                (rule 1)

	%eof           reduce using rule 1


State 18

	Local -> var Variables .                            (rule 5)
	Variables -> Variables . id Morevariables ':' Type ';'    (rule 9)

	begin          reduce using rule 5
	forward        reduce using rule 5
	function       reduce using rule 5
	label          reduce using rule 5
	procedure      reduce using rule 5
	var            reduce using rule 5
	id             shift, and enter state 93


State 19

	Variables -> id . Morevariables ':' Type ';'        (rule 10)

	':'            reduce using rule 12
	','            reduce using rule 12

	Morevariables  goto state 92

State 20

	Header -> procedure id . '(' Arguments1 ')'         (rule 15)

	'('            shift, and enter state 91


State 21

	Local -> label id . Labels ';'                      (rule 6)

	';'            reduce using rule 14
	','            reduce using rule 14

	Labels         goto state 90

State 22

	Header -> function id . '(' Arguments1 ')' ':' Type    (rule 16)

	'('            shift, and enter state 89


State 23

	Local -> forward Header . ';'                       (rule 8)

	';'            shift, and enter state 88


State 24

	Stmt -> Block .                                     (rule 37)

	else           reduce using rule 37
	end            reduce using rule 37
	';'            reduce using rule 37


State 25

	Block -> begin Stmt . Stmts end                     (rule 32)

	end            reduce using rule 34
	';'            reduce using rule 34

	Stmts          goto state 87

State 26

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86

	Binop          goto state 71

State 27

	Stmt -> LValue . equal Expr                         (rule 36)
	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)

	and            reduce using rule 52
	div            reduce using rule 52
	mod            reduce using rule 52
	or             reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	equal          shift, and enter state 69
	'['            shift, and enter state 70


State 28

	Expr -> RValue .                                    (rule 53)

	and            reduce using rule 53
	div            reduce using rule 53
	do             reduce using rule 53
	else           reduce using rule 53
	end            reduce using rule 53
	mod            reduce using rule 53
	or             reduce using rule 53
	then           reduce using rule 53
	'='            reduce using rule 53
	'>'            reduce using rule 53
	'<'            reduce using rule 53
	diff           reduce using rule 53
	greq           reduce using rule 53
	smeq           reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'^'            reduce using rule 53
	';'            reduce using rule 53
	')'            reduce using rule 53
	','            reduce using rule 53
	']'            reduce using rule 53


State 29

	Stmt -> Call .                                      (rule 38)
	RValue -> Call .                                    (rule 67)

	and            reduce using rule 67
	div            reduce using rule 67
	else           reduce using rule 38
	end            reduce using rule 38
	mod            reduce using rule 67
	or             reduce using rule 67
	'='            reduce using rule 67
	'>'            reduce using rule 67
	'<'            reduce using rule 67
	diff           reduce using rule 67
	greq           reduce using rule 67
	smeq           reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'^'            reduce using rule 67
	';'            reduce using rule 38


State 30

	RValue -> Unop . Expr                               (rule 69)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 68
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 31

	Stmt -> dispose . Dispose LValue                    (rule 45)

	false          reduce using rule 51
	nil            reduce using rule 51
	not            reduce using rule 51
	result         reduce using rule 51
	true           reduce using rule 51
	id             reduce using rule 51
	intconst       reduce using rule 51
	realconst      reduce using rule 51
	charconst      reduce using rule 51
	stringconst    reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'@'            reduce using rule 51
	'('            reduce using rule 51
	'['            shift, and enter state 67

	Dispose        goto state 66

State 32

	RValue -> false .                                   (rule 62)

	and            reduce using rule 62
	div            reduce using rule 62
	do             reduce using rule 62
	else           reduce using rule 62
	end            reduce using rule 62
	mod            reduce using rule 62
	or             reduce using rule 62
	then           reduce using rule 62
	'='            reduce using rule 62
	'>'            reduce using rule 62
	'<'            reduce using rule 62
	diff           reduce using rule 62
	greq           reduce using rule 62
	smeq           reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	';'            reduce using rule 62
	')'            reduce using rule 62
	','            reduce using rule 62
	']'            reduce using rule 62


State 33

	Stmt -> goto . id                                   (rule 42)

	id             shift, and enter state 65


State 34

	Stmt -> if . Expr then Stmt Else                    (rule 39)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 64
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 35

	Stmt -> new . New LValue                            (rule 44)

	false          reduce using rule 49
	nil            reduce using rule 49
	not            reduce using rule 49
	result         reduce using rule 49
	true           reduce using rule 49
	id             reduce using rule 49
	intconst       reduce using rule 49
	realconst      reduce using rule 49
	charconst      reduce using rule 49
	stringconst    reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'@'            reduce using rule 49
	'('            reduce using rule 49
	'['            shift, and enter state 63

	New            goto state 62

State 36

	RValue -> nil .                                     (rule 66)

	and            reduce using rule 66
	div            reduce using rule 66
	do             reduce using rule 66
	else           reduce using rule 66
	end            reduce using rule 66
	mod            reduce using rule 66
	or             reduce using rule 66
	then           reduce using rule 66
	'='            reduce using rule 66
	'>'            reduce using rule 66
	'<'            reduce using rule 66
	diff           reduce using rule 66
	greq           reduce using rule 66
	smeq           reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	';'            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	']'            reduce using rule 66


State 37

	Unop -> not .                                       (rule 78)

	false          reduce using rule 78
	nil            reduce using rule 78
	not            reduce using rule 78
	result         reduce using rule 78
	true           reduce using rule 78
	id             reduce using rule 78
	intconst       reduce using rule 78
	realconst      reduce using rule 78
	charconst      reduce using rule 78
	stringconst    reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'@'            reduce using rule 78
	'('            reduce using rule 78


State 38

	LValue -> result .                                  (rule 55)

	and            reduce using rule 55
	div            reduce using rule 55
	do             reduce using rule 55
	else           reduce using rule 55
	end            reduce using rule 55
	mod            reduce using rule 55
	or             reduce using rule 55
	then           reduce using rule 55
	'='            reduce using rule 55
	'>'            reduce using rule 55
	'<'            reduce using rule 55
	diff           reduce using rule 55
	greq           reduce using rule 55
	smeq           reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'^'            reduce using rule 55
	equal          reduce using rule 55
	';'            reduce using rule 55
	')'            reduce using rule 55
	','            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55


State 39

	Stmt -> return .                                    (rule 43)

	else           reduce using rule 43
	end            reduce using rule 43
	';'            reduce using rule 43


State 40

	RValue -> true .                                    (rule 61)

	and            reduce using rule 61
	div            reduce using rule 61
	do             reduce using rule 61
	else           reduce using rule 61
	end            reduce using rule 61
	mod            reduce using rule 61
	or             reduce using rule 61
	then           reduce using rule 61
	'='            reduce using rule 61
	'>'            reduce using rule 61
	'<'            reduce using rule 61
	diff           reduce using rule 61
	greq           reduce using rule 61
	smeq           reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'^'            reduce using rule 61
	';'            reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	']'            reduce using rule 61


State 41

	Stmt -> while . Expr do Stmt                        (rule 40)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 60
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 42

	Stmt -> id . ':' Stmt                               (rule 41)
	LValue -> id .                                      (rule 54)
	Call -> id . '(' Call2 ')'                          (rule 73)

	and            reduce using rule 54
	div            reduce using rule 54
	mod            reduce using rule 54
	or             reduce using rule 54
	'='            reduce using rule 54
	'>'            reduce using rule 54
	'<'            reduce using rule 54
	diff           reduce using rule 54
	greq           reduce using rule 54
	smeq           reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	equal          reduce using rule 54
	'('            shift, and enter state 58
	':'            shift, and enter state 59
	'['            reduce using rule 54


State 43

	RValue -> intconst .                                (rule 60)

	and            reduce using rule 60
	div            reduce using rule 60
	do             reduce using rule 60
	else           reduce using rule 60
	end            reduce using rule 60
	mod            reduce using rule 60
	or             reduce using rule 60
	then           reduce using rule 60
	'='            reduce using rule 60
	'>'            reduce using rule 60
	'<'            reduce using rule 60
	diff           reduce using rule 60
	greq           reduce using rule 60
	smeq           reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	';'            reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	']'            reduce using rule 60


State 44

	RValue -> realconst .                               (rule 63)

	and            reduce using rule 63
	div            reduce using rule 63
	do             reduce using rule 63
	else           reduce using rule 63
	end            reduce using rule 63
	mod            reduce using rule 63
	or             reduce using rule 63
	then           reduce using rule 63
	'='            reduce using rule 63
	'>'            reduce using rule 63
	'<'            reduce using rule 63
	diff           reduce using rule 63
	greq           reduce using rule 63
	smeq           reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	';'            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	']'            reduce using rule 63


State 45

	RValue -> charconst .                               (rule 64)

	and            reduce using rule 64
	div            reduce using rule 64
	do             reduce using rule 64
	else           reduce using rule 64
	end            reduce using rule 64
	mod            reduce using rule 64
	or             reduce using rule 64
	then           reduce using rule 64
	'='            reduce using rule 64
	'>'            reduce using rule 64
	'<'            reduce using rule 64
	diff           reduce using rule 64
	greq           reduce using rule 64
	smeq           reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	';'            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	']'            reduce using rule 64


State 46

	LValue -> stringconst .                             (rule 56)

	and            reduce using rule 56
	div            reduce using rule 56
	do             reduce using rule 56
	else           reduce using rule 56
	end            reduce using rule 56
	mod            reduce using rule 56
	or             reduce using rule 56
	then           reduce using rule 56
	'='            reduce using rule 56
	'>'            reduce using rule 56
	'<'            reduce using rule 56
	diff           reduce using rule 56
	greq           reduce using rule 56
	smeq           reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'^'            reduce using rule 56
	equal          reduce using rule 56
	';'            reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56


State 47

	Unop -> '+' .                                       (rule 79)

	false          reduce using rule 79
	nil            reduce using rule 79
	not            reduce using rule 79
	result         reduce using rule 79
	true           reduce using rule 79
	id             reduce using rule 79
	intconst       reduce using rule 79
	realconst      reduce using rule 79
	charconst      reduce using rule 79
	stringconst    reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'@'            reduce using rule 79
	'('            reduce using rule 79


State 48

	Unop -> '-' .                                       (rule 80)

	false          reduce using rule 80
	nil            reduce using rule 80
	not            reduce using rule 80
	result         reduce using rule 80
	true           reduce using rule 80
	id             reduce using rule 80
	intconst       reduce using rule 80
	realconst      reduce using rule 80
	charconst      reduce using rule 80
	stringconst    reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'@'            reduce using rule 80
	'('            reduce using rule 80


State 49

	RValue -> '@' . LValue                              (rule 68)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 26
	LValue         goto state 57
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 50

	LValue -> '(' . LValue ')'                          (rule 59)
	RValue -> '(' . RValue ')'                          (rule 65)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 26
	LValue         goto state 53
	RValue         goto state 54
	Call           goto state 55
	Unop           goto state 30

State 51

	Local -> Header ';' . Body ';'                      (rule 7)

	begin          reduce using rule 4
	forward        reduce using rule 4
	function       reduce using rule 4
	label          reduce using rule 4
	procedure      reduce using rule 4
	var            reduce using rule 4

	Body           goto state 52
	Bodyrec        goto state 7

State 52

	Local -> Header ';' Body . ';'                      (rule 7)

	';'            shift, and enter state 123


State 53

	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)
	LValue -> '(' LValue . ')'                          (rule 59)

	and            reduce using rule 52
	div            reduce using rule 52
	mod            reduce using rule 52
	or             reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	')'            shift, and enter state 122
	'['            shift, and enter state 70


State 54

	Expr -> RValue .                                    (rule 53)
	RValue -> '(' RValue . ')'                          (rule 65)

	and            reduce using rule 53
	div            reduce using rule 53
	mod            reduce using rule 53
	or             reduce using rule 53
	'='            reduce using rule 53
	'>'            reduce using rule 53
	'<'            reduce using rule 53
	diff           reduce using rule 53
	greq           reduce using rule 53
	smeq           reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'^'            reduce using rule 53
	')'            shift, and enter state 121


State 55

	RValue -> Call .                                    (rule 67)

	and            reduce using rule 67
	div            reduce using rule 67
	do             reduce using rule 67
	else           reduce using rule 67
	end            reduce using rule 67
	mod            reduce using rule 67
	or             reduce using rule 67
	then           reduce using rule 67
	'='            reduce using rule 67
	'>'            reduce using rule 67
	'<'            reduce using rule 67
	diff           reduce using rule 67
	greq           reduce using rule 67
	smeq           reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'^'            reduce using rule 67
	';'            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	']'            reduce using rule 67


State 56

	LValue -> id .                                      (rule 54)
	Call -> id . '(' Call2 ')'                          (rule 73)

	and            reduce using rule 54
	div            reduce using rule 54
	do             reduce using rule 54
	else           reduce using rule 54
	end            reduce using rule 54
	mod            reduce using rule 54
	or             reduce using rule 54
	then           reduce using rule 54
	'='            reduce using rule 54
	'>'            reduce using rule 54
	'<'            reduce using rule 54
	diff           reduce using rule 54
	greq           reduce using rule 54
	smeq           reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	';'            reduce using rule 54
	'('            shift, and enter state 58
	')'            reduce using rule 54
	','            reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54


State 57

	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)
	RValue -> '@' LValue .                              (rule 68)

	and            reduce using rule 68
			(reduce using rule 52)

	div            reduce using rule 68
			(reduce using rule 52)

	do             reduce using rule 68
	else           reduce using rule 68
	end            reduce using rule 68
	mod            reduce using rule 68
			(reduce using rule 52)

	or             reduce using rule 68
			(reduce using rule 52)

	then           reduce using rule 68
	'='            reduce using rule 68
			(reduce using rule 52)

	'>'            reduce using rule 68
			(reduce using rule 52)

	'<'            reduce using rule 68
			(reduce using rule 52)

	diff           reduce using rule 68
			(reduce using rule 52)

	greq           reduce using rule 68
			(reduce using rule 52)

	smeq           reduce using rule 68
			(reduce using rule 52)

	'+'            reduce using rule 68
			(reduce using rule 52)

	'-'            reduce using rule 68
			(reduce using rule 52)

	'*'            reduce using rule 68
			(reduce using rule 52)

	'/'            reduce using rule 68
			(reduce using rule 52)

	'^'            reduce using rule 68
			(reduce using rule 52)

	';'            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	'['            shift, and enter state 70
	']'            reduce using rule 68


State 58

	Call -> id '(' . Call2 ')'                          (rule 73)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50
	')'            reduce using rule 74

	Expr           goto state 119
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Call2          goto state 120
	Unop           goto state 30

State 59

	Stmt -> id ':' . Stmt                               (rule 41)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 35
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 118
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 60

	Stmt -> while Expr . do Stmt                        (rule 40)
	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	do             shift, and enter state 117
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86

	Binop          goto state 71

State 61

	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)

	and            reduce using rule 52
	div            reduce using rule 52
	do             reduce using rule 52
	else           reduce using rule 52
	end            reduce using rule 52
	mod            reduce using rule 52
	or             reduce using rule 52
	then           reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	';'            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	'['            shift, and enter state 70
	']'            reduce using rule 52


State 62

	Stmt -> new New . LValue                            (rule 44)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 26
	LValue         goto state 116
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 63

	New -> '[' . Expr ']'                               (rule 48)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 115
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 64

	Stmt -> if Expr . then Stmt Else                    (rule 39)
	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	then           shift, and enter state 114
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86

	Binop          goto state 71

State 65

	Stmt -> goto id .                                   (rule 42)

	else           reduce using rule 42
	end            reduce using rule 42
	';'            reduce using rule 42


State 66

	Stmt -> dispose Dispose . LValue                    (rule 45)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 26
	LValue         goto state 113
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 67

	Dispose -> '[' . ']'                                (rule 50)

	']'            shift, and enter state 112


State 68

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Unop Expr .                               (rule 69)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
			(reduce using rule 69)

	div            shift, and enter state 73
			(reduce using rule 69)

	do             reduce using rule 69
	else           reduce using rule 69
	end            reduce using rule 69
	mod            shift, and enter state 74
			(reduce using rule 69)

	or             shift, and enter state 75
			(reduce using rule 69)

	then           reduce using rule 69
	'='            shift, and enter state 76
			(reduce using rule 69)

	'>'            shift, and enter state 77
			(reduce using rule 69)

	'<'            shift, and enter state 78
			(reduce using rule 69)

	diff           shift, and enter state 79
			(reduce using rule 69)

	greq           shift, and enter state 80
			(reduce using rule 69)

	smeq           shift, and enter state 81
			(reduce using rule 69)

	'+'            shift, and enter state 82
			(reduce using rule 69)

	'-'            shift, and enter state 83
			(reduce using rule 69)

	'*'            shift, and enter state 84
			(reduce using rule 69)

	'/'            shift, and enter state 85
			(reduce using rule 69)

	'^'            shift, and enter state 86
			(reduce using rule 69)

	';'            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	']'            reduce using rule 69

	Binop          goto state 71

State 69

	Stmt -> LValue equal . Expr                         (rule 36)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 111
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 70

	LValue -> LValue '[' . Expr ']'                     (rule 57)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 110
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 71

	RValue -> Expr Binop . Expr                         (rule 72)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 109
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 72

	Binop -> and .                                      (rule 86)

	false          reduce using rule 86
	nil            reduce using rule 86
	not            reduce using rule 86
	result         reduce using rule 86
	true           reduce using rule 86
	id             reduce using rule 86
	intconst       reduce using rule 86
	realconst      reduce using rule 86
	charconst      reduce using rule 86
	stringconst    reduce using rule 86
	'+'            reduce using rule 86
	'-'            reduce using rule 86
	'@'            reduce using rule 86
	'('            reduce using rule 86


State 73

	Binop -> div .                                      (rule 83)

	false          reduce using rule 83
	nil            reduce using rule 83
	not            reduce using rule 83
	result         reduce using rule 83
	true           reduce using rule 83
	id             reduce using rule 83
	intconst       reduce using rule 83
	realconst      reduce using rule 83
	charconst      reduce using rule 83
	stringconst    reduce using rule 83
	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'@'            reduce using rule 83
	'('            reduce using rule 83


State 74

	Binop -> mod .                                      (rule 84)

	false          reduce using rule 84
	nil            reduce using rule 84
	not            reduce using rule 84
	result         reduce using rule 84
	true           reduce using rule 84
	id             reduce using rule 84
	intconst       reduce using rule 84
	realconst      reduce using rule 84
	charconst      reduce using rule 84
	stringconst    reduce using rule 84
	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'@'            reduce using rule 84
	'('            reduce using rule 84


State 75

	Binop -> or .                                       (rule 85)

	false          reduce using rule 85
	nil            reduce using rule 85
	not            reduce using rule 85
	result         reduce using rule 85
	true           reduce using rule 85
	id             reduce using rule 85
	intconst       reduce using rule 85
	realconst      reduce using rule 85
	charconst      reduce using rule 85
	stringconst    reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'@'            reduce using rule 85
	'('            reduce using rule 85


State 76

	Binop -> '=' .                                      (rule 87)

	false          reduce using rule 87
	nil            reduce using rule 87
	not            reduce using rule 87
	result         reduce using rule 87
	true           reduce using rule 87
	id             reduce using rule 87
	intconst       reduce using rule 87
	realconst      reduce using rule 87
	charconst      reduce using rule 87
	stringconst    reduce using rule 87
	'+'            reduce using rule 87
	'-'            reduce using rule 87
	'@'            reduce using rule 87
	'('            reduce using rule 87


State 77

	Binop -> '>' .                                      (rule 90)

	false          reduce using rule 90
	nil            reduce using rule 90
	not            reduce using rule 90
	result         reduce using rule 90
	true           reduce using rule 90
	id             reduce using rule 90
	intconst       reduce using rule 90
	realconst      reduce using rule 90
	charconst      reduce using rule 90
	stringconst    reduce using rule 90
	'+'            reduce using rule 90
	'-'            reduce using rule 90
	'@'            reduce using rule 90
	'('            reduce using rule 90


State 78

	Binop -> '<' .                                      (rule 89)

	false          reduce using rule 89
	nil            reduce using rule 89
	not            reduce using rule 89
	result         reduce using rule 89
	true           reduce using rule 89
	id             reduce using rule 89
	intconst       reduce using rule 89
	realconst      reduce using rule 89
	charconst      reduce using rule 89
	stringconst    reduce using rule 89
	'+'            reduce using rule 89
	'-'            reduce using rule 89
	'@'            reduce using rule 89
	'('            reduce using rule 89


State 79

	Binop -> diff .                                     (rule 88)

	false          reduce using rule 88
	nil            reduce using rule 88
	not            reduce using rule 88
	result         reduce using rule 88
	true           reduce using rule 88
	id             reduce using rule 88
	intconst       reduce using rule 88
	realconst      reduce using rule 88
	charconst      reduce using rule 88
	stringconst    reduce using rule 88
	'+'            reduce using rule 88
	'-'            reduce using rule 88
	'@'            reduce using rule 88
	'('            reduce using rule 88


State 80

	Binop -> greq .                                     (rule 91)

	false          reduce using rule 91
	nil            reduce using rule 91
	not            reduce using rule 91
	result         reduce using rule 91
	true           reduce using rule 91
	id             reduce using rule 91
	intconst       reduce using rule 91
	realconst      reduce using rule 91
	charconst      reduce using rule 91
	stringconst    reduce using rule 91
	'+'            reduce using rule 91
	'-'            reduce using rule 91
	'@'            reduce using rule 91
	'('            reduce using rule 91


State 81

	Binop -> smeq .                                     (rule 92)

	false          reduce using rule 92
	nil            reduce using rule 92
	not            reduce using rule 92
	result         reduce using rule 92
	true           reduce using rule 92
	id             reduce using rule 92
	intconst       reduce using rule 92
	realconst      reduce using rule 92
	charconst      reduce using rule 92
	stringconst    reduce using rule 92
	'+'            reduce using rule 92
	'-'            reduce using rule 92
	'@'            reduce using rule 92
	'('            reduce using rule 92


State 82

	RValue -> Expr '+' . Expr                           (rule 70)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 108
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 83

	Binop -> '-' .                                      (rule 81)

	false          reduce using rule 81
	nil            reduce using rule 81
	not            reduce using rule 81
	result         reduce using rule 81
	true           reduce using rule 81
	id             reduce using rule 81
	intconst       reduce using rule 81
	realconst      reduce using rule 81
	charconst      reduce using rule 81
	stringconst    reduce using rule 81
	'+'            reduce using rule 81
	'-'            reduce using rule 81
	'@'            reduce using rule 81
	'('            reduce using rule 81


State 84

	RValue -> Expr '*' . Expr                           (rule 71)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 107
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 85

	Binop -> '/' .                                      (rule 82)

	false          reduce using rule 82
	nil            reduce using rule 82
	not            reduce using rule 82
	result         reduce using rule 82
	true           reduce using rule 82
	id             reduce using rule 82
	intconst       reduce using rule 82
	realconst      reduce using rule 82
	charconst      reduce using rule 82
	stringconst    reduce using rule 82
	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'@'            reduce using rule 82
	'('            reduce using rule 82


State 86

	LValue -> Expr '^' .                                (rule 58)

	and            reduce using rule 58
	div            reduce using rule 58
	do             reduce using rule 58
	else           reduce using rule 58
	end            reduce using rule 58
	mod            reduce using rule 58
	or             reduce using rule 58
	then           reduce using rule 58
	'='            reduce using rule 58
	'>'            reduce using rule 58
	'<'            reduce using rule 58
	diff           reduce using rule 58
	greq           reduce using rule 58
	smeq           reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	equal          reduce using rule 58
	';'            reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58


State 87

	Block -> begin Stmt Stmts . end                     (rule 32)
	Stmts -> Stmts . ';' Stmt                           (rule 33)

	end            shift, and enter state 105
	';'            shift, and enter state 106


State 88

	Local -> forward Header ';' .                       (rule 8)

	begin          reduce using rule 8
	forward        reduce using rule 8
	function       reduce using rule 8
	label          reduce using rule 8
	procedure      reduce using rule 8
	var            reduce using rule 8


State 89

	Header -> function id '(' . Arguments1 ')' ':' Type    (rule 16)

	var            shift, and enter state 101
	id             reduce using rule 22
	')'            reduce using rule 17

	Arguments1     goto state 104
	Arguments2     goto state 98
	Formal         goto state 99
	Vars           goto state 100

State 90

	Local -> label id Labels . ';'                      (rule 6)
	Labels -> Labels . ',' id                           (rule 13)

	';'            shift, and enter state 102
	','            shift, and enter state 103


State 91

	Header -> procedure id '(' . Arguments1 ')'         (rule 15)

	var            shift, and enter state 101
	id             reduce using rule 22
	')'            reduce using rule 17

	Arguments1     goto state 97
	Arguments2     goto state 98
	Formal         goto state 99
	Vars           goto state 100

State 92

	Variables -> id Morevariables . ':' Type ';'        (rule 10)
	Morevariables -> Morevariables . ',' id             (rule 11)

	':'            shift, and enter state 95
	','            shift, and enter state 96


State 93

	Variables -> Variables id . Morevariables ':' Type ';'    (rule 9)

	':'            reduce using rule 12
	','            reduce using rule 12

	Morevariables  goto state 94

State 94

	Variables -> Variables id Morevariables . ':' Type ';'    (rule 9)
	Morevariables -> Morevariables . ',' id             (rule 11)

	':'            shift, and enter state 144
	','            shift, and enter state 96


State 95

	Variables -> id Morevariables ':' . Type ';'        (rule 10)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 137

State 96

	Morevariables -> Morevariables ',' . id             (rule 11)

	id             shift, and enter state 136


State 97

	Header -> procedure id '(' Arguments1 . ')'         (rule 15)

	')'            shift, and enter state 135


State 98

	Arguments1 -> Arguments2 .                          (rule 18)
	Arguments2 -> Arguments2 . ';' Formal               (rule 19)

	';'            shift, and enter state 134
	')'            reduce using rule 18


State 99

	Arguments2 -> Formal .                              (rule 20)

	';'            reduce using rule 20
	')'            reduce using rule 20


State 100

	Formal -> Vars . id Labels ':' Type                 (rule 21)

	id             shift, and enter state 133


State 101

	Vars -> var .                                       (rule 23)

	id             reduce using rule 23


State 102

	Local -> label id Labels ';' .                      (rule 6)

	begin          reduce using rule 6
	forward        reduce using rule 6
	function       reduce using rule 6
	label          reduce using rule 6
	procedure      reduce using rule 6
	var            reduce using rule 6


State 103

	Labels -> Labels ',' . id                           (rule 13)

	id             shift, and enter state 132


State 104

	Header -> function id '(' Arguments1 . ')' ':' Type    (rule 16)

	')'            shift, and enter state 131


State 105

	Block -> begin Stmt Stmts end .                     (rule 32)

	else           reduce using rule 32
	end            reduce using rule 32
	';'            reduce using rule 32
	'.'            reduce using rule 32


State 106

	Stmts -> Stmts ';' . Stmt                           (rule 33)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 130
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 107

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr '*' Expr .                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            reduce using rule 71
	div            reduce using rule 71
	do             reduce using rule 71
	else           reduce using rule 71
	end            reduce using rule 71
	mod            reduce using rule 71
	or             reduce using rule 71
	then           reduce using rule 71
	'='            reduce using rule 71
	'>'            reduce using rule 71
	'<'            reduce using rule 71
	diff           reduce using rule 71
	greq           reduce using rule 71
	smeq           reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	'^'            shift, and enter state 86
	';'            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	']'            reduce using rule 71

	Binop          goto state 71

State 108

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr '+' Expr .                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	do             reduce using rule 70
	else           reduce using rule 70
	end            reduce using rule 70
	mod            shift, and enter state 74
	or             reduce using rule 70
	then           reduce using rule 70
	'='            reduce using rule 70
	'>'            reduce using rule 70
	'<'            reduce using rule 70
	diff           reduce using rule 70
	greq           reduce using rule 70
	smeq           reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	';'            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	']'            reduce using rule 70

	Binop          goto state 71

State 109

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)
	RValue -> Expr Binop Expr .                         (rule 72)

	and            shift, and enter state 72
			(reduce using rule 72)

	div            shift, and enter state 73
			(reduce using rule 72)

	do             reduce using rule 72
	else           reduce using rule 72
	end            reduce using rule 72
	mod            shift, and enter state 74
			(reduce using rule 72)

	or             shift, and enter state 75
			(reduce using rule 72)

	then           reduce using rule 72
	'='            shift, and enter state 76
			(reduce using rule 72)

	'>'            shift, and enter state 77
			(reduce using rule 72)

	'<'            shift, and enter state 78
			(reduce using rule 72)

	diff           shift, and enter state 79
			(reduce using rule 72)

	greq           shift, and enter state 80
			(reduce using rule 72)

	smeq           shift, and enter state 81
			(reduce using rule 72)

	'+'            shift, and enter state 82
			(reduce using rule 72)

	'-'            shift, and enter state 83
			(reduce using rule 72)

	'*'            shift, and enter state 84
			(reduce using rule 72)

	'/'            shift, and enter state 85
			(reduce using rule 72)

	'^'            shift, and enter state 86
			(reduce using rule 72)

	';'            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	']'            reduce using rule 72

	Binop          goto state 71

State 110

	LValue -> LValue '[' Expr . ']'                     (rule 57)
	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	']'            shift, and enter state 129

	Binop          goto state 71

State 111

	Stmt -> LValue equal Expr .                         (rule 36)
	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	else           reduce using rule 36
	end            reduce using rule 36
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	';'            reduce using rule 36

	Binop          goto state 71

State 112

	Dispose -> '[' ']' .                                (rule 50)

	false          reduce using rule 50
	nil            reduce using rule 50
	not            reduce using rule 50
	result         reduce using rule 50
	true           reduce using rule 50
	id             reduce using rule 50
	intconst       reduce using rule 50
	realconst      reduce using rule 50
	charconst      reduce using rule 50
	stringconst    reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'@'            reduce using rule 50
	'('            reduce using rule 50


State 113

	Stmt -> dispose Dispose LValue .                    (rule 45)
	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)

	and            reduce using rule 52
	div            reduce using rule 52
	else           reduce using rule 45
	end            reduce using rule 45
	mod            reduce using rule 52
	or             reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	';'            reduce using rule 45
	'['            shift, and enter state 70


State 114

	Stmt -> if Expr then . Stmt Else                    (rule 39)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 35
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 128
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 115

	New -> '[' Expr . ']'                               (rule 48)
	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	']'            shift, and enter state 127

	Binop          goto state 71

State 116

	Stmt -> new New LValue .                            (rule 44)
	Expr -> LValue .                                    (rule 52)
	LValue -> LValue . '[' Expr ']'                     (rule 57)

	and            reduce using rule 52
	div            reduce using rule 52
	else           reduce using rule 44
	end            reduce using rule 44
	mod            reduce using rule 52
	or             reduce using rule 52
	'='            reduce using rule 52
	'>'            reduce using rule 52
	'<'            reduce using rule 52
	diff           reduce using rule 52
	greq           reduce using rule 52
	smeq           reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	';'            reduce using rule 44
	'['            shift, and enter state 70


State 117

	Stmt -> while Expr do . Stmt                        (rule 40)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 35
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 126
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 118

	Stmt -> id ':' Stmt .                               (rule 41)

	else           reduce using rule 41
	end            reduce using rule 41
	';'            reduce using rule 41


State 119

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)
	Call2 -> Expr . Call3                               (rule 75)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	')'            reduce using rule 77
	','            reduce using rule 77

	Call3          goto state 125
	Binop          goto state 71

State 120

	Call -> id '(' Call2 . ')'                          (rule 73)

	')'            shift, and enter state 124


State 121

	RValue -> '(' RValue ')' .                          (rule 65)

	and            reduce using rule 65
	div            reduce using rule 65
	do             reduce using rule 65
	else           reduce using rule 65
	end            reduce using rule 65
	mod            reduce using rule 65
	or             reduce using rule 65
	then           reduce using rule 65
	'='            reduce using rule 65
	'>'            reduce using rule 65
	'<'            reduce using rule 65
	diff           reduce using rule 65
	greq           reduce using rule 65
	smeq           reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	'^'            reduce using rule 65
	';'            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	']'            reduce using rule 65


State 122

	LValue -> '(' LValue ')' .                          (rule 59)

	and            reduce using rule 59
	div            reduce using rule 59
	do             reduce using rule 59
	else           reduce using rule 59
	end            reduce using rule 59
	mod            reduce using rule 59
	or             reduce using rule 59
	then           reduce using rule 59
	'='            reduce using rule 59
	'>'            reduce using rule 59
	'<'            reduce using rule 59
	diff           reduce using rule 59
	greq           reduce using rule 59
	smeq           reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'^'            reduce using rule 59
	equal          reduce using rule 59
	';'            reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59


State 123

	Local -> Header ';' Body ';' .                      (rule 7)

	begin          reduce using rule 7
	forward        reduce using rule 7
	function       reduce using rule 7
	label          reduce using rule 7
	procedure      reduce using rule 7
	var            reduce using rule 7


State 124

	Call -> id '(' Call2 ')' .                          (rule 73)

	and            reduce using rule 73
	div            reduce using rule 73
	do             reduce using rule 73
	else           reduce using rule 73
	end            reduce using rule 73
	mod            reduce using rule 73
	or             reduce using rule 73
	then           reduce using rule 73
	'='            reduce using rule 73
	'>'            reduce using rule 73
	'<'            reduce using rule 73
	diff           reduce using rule 73
	greq           reduce using rule 73
	smeq           reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	'^'            reduce using rule 73
	';'            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	']'            reduce using rule 73


State 125

	Call2 -> Expr Call3 .                               (rule 75)
	Call3 -> Call3 . ',' Expr                           (rule 76)

	')'            reduce using rule 75
	','            shift, and enter state 155


State 126

	Stmt -> while Expr do Stmt .                        (rule 40)

	else           reduce using rule 40
	end            reduce using rule 40
	';'            reduce using rule 40


State 127

	New -> '[' Expr ']' .                               (rule 48)

	false          reduce using rule 48
	nil            reduce using rule 48
	not            reduce using rule 48
	result         reduce using rule 48
	true           reduce using rule 48
	id             reduce using rule 48
	intconst       reduce using rule 48
	realconst      reduce using rule 48
	charconst      reduce using rule 48
	stringconst    reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'@'            reduce using rule 48
	'('            reduce using rule 48


State 128

	Stmt -> if Expr then Stmt . Else                    (rule 39)

	else           shift, and enter state 154
			(reduce using rule 47)

	end            reduce using rule 47
	';'            reduce using rule 47

	Else           goto state 153

State 129

	LValue -> LValue '[' Expr ']' .                     (rule 57)

	and            reduce using rule 57
	div            reduce using rule 57
	do             reduce using rule 57
	else           reduce using rule 57
	end            reduce using rule 57
	mod            reduce using rule 57
	or             reduce using rule 57
	then           reduce using rule 57
	'='            reduce using rule 57
	'>'            reduce using rule 57
	'<'            reduce using rule 57
	diff           reduce using rule 57
	greq           reduce using rule 57
	smeq           reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'^'            reduce using rule 57
	equal          reduce using rule 57
	';'            reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57


State 130

	Stmts -> Stmts ';' Stmt .                           (rule 33)

	end            reduce using rule 33
	';'            reduce using rule 33


State 131

	Header -> function id '(' Arguments1 ')' . ':' Type    (rule 16)

	':'            shift, and enter state 152


State 132

	Labels -> Labels ',' id .                           (rule 13)

	';'            reduce using rule 13
	':'            reduce using rule 13
	','            reduce using rule 13


State 133

	Formal -> Vars id . Labels ':' Type                 (rule 21)

	':'            reduce using rule 14
	','            reduce using rule 14

	Labels         goto state 151

State 134

	Arguments2 -> Arguments2 ';' . Formal               (rule 19)

	var            shift, and enter state 101
	id             reduce using rule 22

	Formal         goto state 150
	Vars           goto state 100

State 135

	Header -> procedure id '(' Arguments1 ')' .         (rule 15)

	';'            reduce using rule 15


State 136

	Morevariables -> Morevariables ',' id .             (rule 11)

	':'            reduce using rule 11
	','            reduce using rule 11


State 137

	Variables -> id Morevariables ':' Type . ';'        (rule 10)

	';'            shift, and enter state 149


State 138

	Type -> array . Array of Type                       (rule 28)

	of             reduce using rule 31
	'['            shift, and enter state 148

	Array          goto state 147

State 139

	Type -> boolean .                                   (rule 26)

	';'            reduce using rule 26
	')'            reduce using rule 26


State 140

	Type -> char .                                      (rule 27)

	';'            reduce using rule 27
	')'            reduce using rule 27


State 141

	Type -> integer .                                   (rule 24)

	';'            reduce using rule 24
	')'            reduce using rule 24


State 142

	Type -> real .                                      (rule 25)

	';'            reduce using rule 25
	')'            reduce using rule 25


State 143

	Type -> '^' . Type                                  (rule 29)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 146

State 144

	Variables -> Variables id Morevariables ':' . Type ';'    (rule 9)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 145

State 145

	Variables -> Variables id Morevariables ':' Type . ';'    (rule 9)

	';'            shift, and enter state 162


State 146

	Type -> '^' Type .                                  (rule 29)

	';'            reduce using rule 29
	')'            reduce using rule 29


State 147

	Type -> array Array . of Type                       (rule 28)

	of             shift, and enter state 161


State 148

	Array -> '[' . intconst ']'                         (rule 30)

	intconst       shift, and enter state 160


State 149

	Variables -> id Morevariables ':' Type ';' .        (rule 10)

	begin          reduce using rule 10
	forward        reduce using rule 10
	function       reduce using rule 10
	label          reduce using rule 10
	procedure      reduce using rule 10
	var            reduce using rule 10
	id             reduce using rule 10


State 150

	Arguments2 -> Arguments2 ';' Formal .               (rule 19)

	';'            reduce using rule 19
	')'            reduce using rule 19


State 151

	Labels -> Labels . ',' id                           (rule 13)
	Formal -> Vars id Labels . ':' Type                 (rule 21)

	':'            shift, and enter state 159
	','            shift, and enter state 103


State 152

	Header -> function id '(' Arguments1 ')' ':' . Type    (rule 16)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 158

State 153

	Stmt -> if Expr then Stmt Else .                    (rule 39)

	else           reduce using rule 39
	end            reduce using rule 39
	';'            reduce using rule 39


State 154

	Else -> else . Stmt                                 (rule 46)

	begin          shift, and enter state 11
	dispose        shift, and enter state 31
	else           reduce using rule 35
	end            reduce using rule 35
	false          shift, and enter state 32
	goto           shift, and enter state 33
	if             shift, and enter state 34
	new            shift, and enter state 35
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	return         shift, and enter state 39
	true           shift, and enter state 40
	while          shift, and enter state 41
	id             shift, and enter state 42
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	';'            reduce using rule 35
	'('            shift, and enter state 50

	Block          goto state 24
	Stmt           goto state 157
	Expr           goto state 26
	LValue         goto state 27
	RValue         goto state 28
	Call           goto state 29
	Unop           goto state 30

State 155

	Call3 -> Call3 ',' . Expr                           (rule 76)

	false          shift, and enter state 32
	nil            shift, and enter state 36
	not            shift, and enter state 37
	result         shift, and enter state 38
	true           shift, and enter state 40
	id             shift, and enter state 56
	intconst       shift, and enter state 43
	realconst      shift, and enter state 44
	charconst      shift, and enter state 45
	stringconst    shift, and enter state 46
	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'@'            shift, and enter state 49
	'('            shift, and enter state 50

	Expr           goto state 156
	LValue         goto state 61
	RValue         goto state 28
	Call           goto state 55
	Unop           goto state 30

State 156

	LValue -> Expr . '^'                                (rule 58)
	RValue -> Expr . '+' Expr                           (rule 70)
	RValue -> Expr . '*' Expr                           (rule 71)
	RValue -> Expr . Binop Expr                         (rule 72)
	Call3 -> Call3 ',' Expr .                           (rule 76)

	and            shift, and enter state 72
	div            shift, and enter state 73
	mod            shift, and enter state 74
	or             shift, and enter state 75
	'='            shift, and enter state 76
	'>'            shift, and enter state 77
	'<'            shift, and enter state 78
	diff           shift, and enter state 79
	greq           shift, and enter state 80
	smeq           shift, and enter state 81
	'+'            shift, and enter state 82
	'-'            shift, and enter state 83
	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	'^'            shift, and enter state 86
	')'            reduce using rule 76
	','            reduce using rule 76

	Binop          goto state 71

State 157

	Else -> else Stmt .                                 (rule 46)

	else           reduce using rule 46
	end            reduce using rule 46
	';'            reduce using rule 46


State 158

	Header -> function id '(' Arguments1 ')' ':' Type .    (rule 16)

	';'            reduce using rule 16


State 159

	Formal -> Vars id Labels ':' . Type                 (rule 21)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 165

State 160

	Array -> '[' intconst . ']'                         (rule 30)

	']'            shift, and enter state 164


State 161

	Type -> array Array of . Type                       (rule 28)

	array          shift, and enter state 138
	boolean        shift, and enter state 139
	char           shift, and enter state 140
	integer        shift, and enter state 141
	real           shift, and enter state 142
	'^'            shift, and enter state 143

	Type           goto state 163

State 162

	Variables -> Variables id Morevariables ':' Type ';' .    (rule 9)

	begin          reduce using rule 9
	forward        reduce using rule 9
	function       reduce using rule 9
	label          reduce using rule 9
	procedure      reduce using rule 9
	var            reduce using rule 9
	id             reduce using rule 9


State 163

	Type -> array Array of Type .                       (rule 28)

	';'            reduce using rule 28
	')'            reduce using rule 28


State 164

	Array -> '[' intconst ']' .                         (rule 30)

	of             reduce using rule 30


State 165

	Formal -> Vars id Labels ':' Type .                 (rule 21)

	';'            reduce using rule 21
	')'            reduce using rule 21


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 93
Number of terminals: 58
Number of non-terminals: 29
Number of states: 166
